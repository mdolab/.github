parameters:
  - name: REPO_NAME
    type: string
  - name: IGNORE_STYLE
    type: boolean
    default: false # these defaults are here because the template could be used by repos directly
  - name: ISORT
    type: boolean
    default: false # these defaults are here because the template could be used by repos directly
  - name: TAPENADE
    type: boolean
  - name: TAPENADE_Version
    type: string
  - name: TAPENADE_SCRIPT
    type: string

jobs:
  - job: flake8
    pool:
      vmImage: "ubuntu-20.04"
    continueOnError: ${{ parameters.IGNORE_STYLE }}
    strategy:
      matrix:
        "python37":
          PYTHON_VERSION: "3.7"
        "python38":
          PYTHON_VERSION: "3.8"
    steps:
      - checkout: self
      - checkout: azure_template
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
      - script: |
          cd ${{ parameters.REPO_NAME }}
          pip install flake8==3.9.2

          if [[ -f ".flake8" ]]; then
            export FL8=.flake8-project
            mv .flake8 $FL8; # rename the file from code repo; should have higher precedence in merge
          fi

          cp ../.github/.flake8 .

          if [[ -f "$FL8" ]]; then
              python -m flake8 . --append-config $FL8 --count --show-source --statistics;
          else
              python -m flake8 . --count --show-source --statistics;
          fi

  - job: black
    pool:
      vmImage: "ubuntu-20.04"
    continueOnError: ${{ parameters.IGNORE_STYLE }}
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
      - script: |
          cd ${{ parameters.REPO_NAME }}
          pip install black==21.6b0
          black . --check --diff -l 120 --target-version py37 --target-version py38

  - job: isort
    pool:
      vmImage: "ubuntu-20.04"
    condition: ${{ parameters.ISORT }}
    steps:
      - checkout: self
      - checkout: azure_template
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
      - script: |
          cd ${{ parameters.REPO_NAME }}

          # copy over the isort config file
          if [[ ! -f ".isort.cfg" ]]; then
            cp ../.github/.isort.cfg .
          fi

          pip install isort
          isort . -c

  - job: tapenade
    pool:
      vmImage: "ubuntu-20.04"
    condition: ${{ parameters.TAPENADE }}
    steps:
      - checkout: azure_template
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: "8"
          jdkArchitectureOption: "x86"
          jdkSourceOption: "PreInstalled"
      - script: |
          if [[ "${{ parameters.TAPENADE_VERSION }}" == "3.10" ]]; then
            export TAPENADE_URL=http://umich.edu/~mdolaboratory/misc/tapenade3.10.tar
            export TAPENADE_HOME=$(pwd)/tapenade${{ parameters.TAPENADE_VERSION }}/bin
          elif [[ "${{ parameters.TAPENADE_VERSION }}" == "3.16" ]]; then
            export TAPENADE_URL=http://www-sop.inria.fr/ecuador/tapenade/distrib/tapenade_3.16.tar
            export TAPENADE_HOME=$(pwd)/tapenade_${{ parameters.TAPENADE_VERSION }}/bin
          fi

          wget $TAPENADE_URL
          tar -xzf tapenade_${{ parameters.TAPENADE_VERSION }}.tar
          export PATH=$TAPENADE_HOME/bin:$PATH

          cd ${{ parameters.REPO_NAME }}
          bash ${{ parameters.TAPENADE_SCRIPT }}
          git diff --exit-code
