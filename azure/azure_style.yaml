parameters:
  - name: REPO_NAME
    type: string
  # The following parameters have defaults because this template could be used by repos directly
  - name: TIMEOUT
    type: number
    default: 10
  - name: IGNORE_STYLE
    type: boolean
    default: false
  - name: ISORT
    type: boolean
    default: false
  - name: PYLINT
    type: boolean
    default: false
  - name: CLANG_FORMAT
    type: boolean
    default: false

jobs:
  - job: flake8
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: ${{ parameters.TIMEOUT }}
    continueOnError: ${{ parameters.IGNORE_STYLE }}
    strategy:
      matrix:
        "py38":
          PYTHON_VERSION: "3.8"
        "py39":
          PYTHON_VERSION: "3.9"
    steps:
      - checkout: self
      - checkout: azure_template
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
      - script: |
          cd ${{ parameters.REPO_NAME }}
          pip install wheel
          pip install -r ../.github/flake8-requirements.txt

          if [[ -f ".flake8" ]]; then
            export FL8=.flake8-project
            mv .flake8 $FL8; # rename the file from code repo; should have higher precedence in merge
          fi

          cp ../.github/.flake8 .

          if [[ -f "$FL8" ]]; then
              flake8 . --append-config $FL8 --count --show-source --statistics;
          else
              flake8 . --count --show-source --statistics;
          fi

  - job: black
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: ${{ parameters.TIMEOUT }}
    continueOnError: ${{ parameters.IGNORE_STYLE }}
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
      - script: |
          pip install wheel
          pip install black==22.3.0
          black . --check --diff -l 120 --target-version py38 --target-version py39

  - job: isort
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: ${{ parameters.TIMEOUT }}
    condition: ${{ parameters.ISORT }}
    steps:
      - checkout: self
      - checkout: azure_template
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
      - script: |
          cd ${{ parameters.REPO_NAME }}

          # copy over the isort config file
          if [[ ! -f ".isort.cfg" ]]; then
            cp ../.github/.isort.cfg .
          fi

          pip install wheel
          pip install isort
          isort . -c

  - job: pylint
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: ${{ parameters.TIMEOUT }}
    condition: ${{ parameters.PYLINT }}
    steps:
      - checkout: self
      - checkout: azure_template
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
      - script: |
          cd ${{ parameters.REPO_NAME }}

          # copy over the pylint config file
          cp ../.github/.pylintrc .

          pip install pylint
          find . -type f -name "*.py" -not -path "*/doc/*" | xargs pylint

  - job: clang_format
    pool:
      vmImage: "ubuntu-20.04"
    timeoutInMinutes: ${{ parameters.TIMEOUT }}
    condition: ${{ parameters.CLANG_FORMAT }}
    steps:
      - script: |
          sudo apt-get install clang-format-10 -y
          bash ./.github/clang_format.sh

